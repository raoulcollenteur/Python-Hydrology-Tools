{
    "CMF": {
        "description": "Catchment Modelling Framework, a hydrologic modelling toolbox.",
        "url": "https://github.com/philippkraft/cmf",
        "category": "Catchment Hydrology",
        "docs": "https://philippkraft.github.io/cmf/",
        "CI": 0,
        "last_update": "2024-12-05T14:04:49",
        "pypi": "https://pypi.org/project/CMF/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1016/j.envsoft.2010.12.009",
        "conda": "",
        "version": "2.0.1",
        "legacy": ""
    },
    "VIC": {
        "description": "The Variable Infiltration Capacity (VIC) Macroscale Hydrologic Model.",
        "url": "https://github.com/UW-Hydro/VIC",
        "category": "Catchment Hydrology",
        "docs": "http://vic.readthedocs.io",
        "CI": 0,
        "last_update": "2016-06-18T22:49:24",
        "pypi": "https://pypi.org/project/VIC/",
        "doi_software": "https://zenodo.org/doi/10.5281/zenodo.593392",
        "doi_paper": "http://dx.doi.org/10.1029/94jd00483",
        "conda": "https://anaconda.org/conda-forge/VIC",
        "version": "0.0.1",
        "legacy": ""
    },
    "Xanthos": {
        "description": "Xanthos is an open-source hydrologic model, written in Python, designed to quantify and analyze global water availability.",
        "url": "https://github.com/JGCRI/xanthos",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "2021-08-10T20:55:25",
        "pypi": "https://pypi.org/project/Xanthos/",
        "doi_software": "https://zenodo.org/badge/latestdoi/88797535",
        "doi_paper": "",
        "conda": "",
        "version": "2.4.1",
        "legacy": ""
    },
    "wrfhydropy": {
        "description": "wrfhydrpy is a Python API for the WRF-Hydro modelling system.",
        "url": "https://github.com/NCAR/wrf_hydro_py",
        "category": "Catchment Hydrology",
        "docs": "https://wrfhydropy.readthedocs.io/",
        "CI": 0,
        "last_update": "2024-02-16T21:26:27",
        "pypi": "https://pypi.org/project/wrfhydropy/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.0.21",
        "legacy": ""
    },
    "EXP-HYDRO": {
        "description": "EXP-HYDRO is a catchment scale hydrological model that operates at a daily time-step. It takes as inputs the daily values of precipitation, air temperature, and potential evapotranspiration, and simulates daily streamflow at the catchment outlet.",
        "url": "https://github.com/sopanpatil/exp-hydro",
        "category": "Catchment Hydrology",
        "docs": "https://sopanpatil.github.io/exp-hydro/",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1002/hyp.11199",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "RRMPG": {
        "description": "Rainfall-Runoff modelling playground.",
        "url": "https://github.com/kratzert/RRMPG",
        "category": "Catchment Hydrology",
        "docs": "http://rrmpg.readthedocs.io/en/latest/index.html",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "LHMP": {
        "description": "Lumped Hydrological Models Playground.",
        "url": "https://github.com/hydrogo/LHMP",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "SMARTPy": {
        "description": "Python implementation of the rainfall-runoff model SMART",
        "url": "https://github.com/ThibHlln/smartpy",
        "category": "Catchment Hydrology",
        "docs": "https://thibhlln.github.io/smartpy",
        "CI": 0,
        "last_update": "2022-02-14T16:18:21",
        "pypi": "https://pypi.org/project/SMARTPy/",
        "doi_software": "https://zenodo.org/badge/latestdoi/118467753",
        "doi_paper": "",
        "conda": "",
        "version": "0.2.2",
        "legacy": ""
    },
    "PyStream": {
        "description": "Python implementation of the STREAM hydrological rainfall-runoff model.",
        "url": "https://github.com/martibosch/pystream",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "2015-06-18T14:58:50",
        "pypi": "https://pypi.org/project/PyStream/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.1",
        "legacy": 1
    },
    "HydPy": {
        "description": "A framework for the development and application of hydrological models based on Python.",
        "url": "https://github.com/hydpy-dev/hydpy",
        "category": "Catchment Hydrology",
        "docs": "https://hydpy-dev.github.io/hydpy",
        "CI": 1,
        "last_update": "2025-05-09T17:05:03",
        "pypi": "https://pypi.org/project/HydPy/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "6.1.5",
        "legacy": ""
    },
    "Catchmod": {
        "description": "CATCHMOD is widely used rainfall runoff model in the United Kingdom. It was introduced by Wilby (1994).",
        "url": "https://pypi.org/project/pycatchmod/",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "2019-01-08T20:58:42",
        "pypi": "https://pypi.org/project/pycatchmod/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.1.0",
        "legacy": 1
    },
    "wflow": {
        "description": "wflow consists of a set of Python programs that can be run on the command line and perform hydrological simulations. The models are based on the PCRaster Python framework",
        "url": "https://github.com/openstreams/wflow",
        "category": "Catchment Hydrology",
        "docs": "https://wflow.readthedocs.io",
        "CI": 0,
        "last_update": "2020-11-26T09:32:03",
        "pypi": "https://pypi.org/project/wflow/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/wflow",
        "version": "2020.1.2",
        "legacy": 1
    },
    "PyTOPKAPI": {
        "description": "PyTOPKAPI is a BSD licensed Python library implementing the TOPKAPI Hydrological model (Liu and Todini, 2002).",
        "url": "https://github.com/sahg/PyTOPKAPI",
        "category": "Catchment Hydrology",
        "docs": "http://sahg.github.io/PyTOPKAPI/",
        "CI": 0,
        "last_update": "",
        "pypi": "https://pypi.org/project/PyTOPKAPI/",
        "doi_software": "https://zenodo.org/badge/latestdoi/689231",
        "doi_paper": "http://dx.doi.org/10.5194/hess-14-613-2010",
        "conda": "",
        "version": "",
        "legacy": "1"
    },
    "mhmpy": {
        "description": "A Python-API for the mesoscale Hydrological Model.",
        "url": "https://github.com/MuellerSeb/mhmpy",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "2019-08-26T13:08:06",
        "pypi": "https://pypi.org/project/mhmpy/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.0.0",
        "legacy": 1
    },
    "SuperflexPy": {
        "description": "SuperflexPy: A new open source framework for building conceptual hydrological models",
        "url": "https://github.com/dalmo1991/superflexPy",
        "category": "Catchment Hydrology",
        "docs": "https://superflexpy.readthedocs.io",
        "CI": 0,
        "last_update": "2023-11-25T09:33:47",
        "pypi": "https://pypi.org/project/SuperflexPy/",
        "doi_software": "https://zenodo.org/badge/latestdoi/208847505",
        "doi_paper": "https://doi.org/10.5194/gmd-14-7047-2021",
        "conda": "",
        "version": "1.3.2",
        "legacy": ""
    },
    "NeuralHydrology": {
        "description": "Python library to train neural networks with a strong focus on hydrological applications.",
        "url": "https://github.com/neuralhydrology/neuralhydrology",
        "category": "Catchment Hydrology",
        "docs": "https://neuralhydrology.readthedocs.io/",
        "CI": 1,
        "last_update": "2025-03-15T12:48:39",
        "pypi": "https://pypi.org/project/NeuralHydrology/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.21105/joss.04050",
        "conda": "",
        "version": "1.12.0",
        "legacy": 0
    },
    "DRYP": {
        "description": "Dryland Water Partition model.",
        "url": "https://github.com/AndresQuichimbo/DRYP",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "LuKars": {
        "description": "The LuKARS model is a lumped karst hydrological model to perform studies in karstic environments.",
        "url": "https://github.com/dbittner87/LuKARS",
        "category": "Catchment Hydrology",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "Gravi4GW": {
        "description": "A tool for conversion between \u0394g and groundwater storage changes.",
        "url": "https://github.com/lhalloran/Gravi4GW",
        "category": "Groundwater",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1016/j.envsoft.2022.105340",
        "conda": "",
        "version": "",
        "legacy": 0
    },
    "SUMMA": {
        "description": "A hydrologic modeling framework that can be used for the systematic analysis of alternative model conceptualizations with respect to flux parameterizations, spatial configurations, and numerical solution techniques.",
        "url": "https://github.com/CH-Earth/summa",
        "category": "Catchment Hydrology",
        "docs": "http://summa.readthedocs.io/",
        "CI": 0,
        "last_update": "2019-01-16T22:12:13",
        "pypi": "https://pypi.org/project/SUMMA/",
        "doi_software": "https://doi.org/10.5281/zenodo.800772",
        "doi_paper": "http://dx.doi.org/10.1002/2015WR017198",
        "conda": "https://anaconda.org/conda-forge/SUMMA",
        "version": "1.2.0",
        "legacy": ""
    },
    "MetPy": {
        "description": "MetPy is a collection of tools in Python for reading, visualizing and performing calculations with weather data.",
        "url": "https://github.com/Unidata/MetPy",
        "category": "Meteorological tools",
        "docs": "https://unidata.github.io/MetPy/",
        "CI": 1,
        "last_update": "2025-08-29T23:19:51",
        "pypi": "https://pypi.org/project/MetPy/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/MetPy",
        "version": "1.7.1",
        "legacy": 0
    },
    "PyEto": {
        "description": "PyETo is a Python library for calculating reference crop evapotranspiration (ETo), sometimes referred to as potential evapotranspiration (PET). The library provides numerous functions for estimating missing meteorological data.",
        "url": "https://github.com/woodcrafty/PyETo",
        "category": "Meteorological tools",
        "docs": "https://pyeto.readthedocs.io",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "pyfao56": {
        "description": "A Python implementation of the FAO-56 dual crop coefficient approach for crop water use estimation and irrigation scheduling.",
        "url": "https://github.com/kthorp/pyfao56",
        "category": "Meteorological tools",
        "docs": "",
        "CI": 0,
        "last_update": "2025-02-10T23:01:41",
        "pypi": "https://pypi.org/project/pyfao56/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1016/j.softx.2023.101518",
        "conda": "https://anaconda.org/conda-forge/pyfao56",
        "version": "1.4.0",
        "legacy": ""
    },
    "Improver": {
        "description": "IMPROVER is a library of algorithms for meteorological post-processing and verification.",
        "url": "https://github.com/metoppv/improver",
        "category": "Meteorological tools",
        "docs": "http://improver.readthedocs.io/en/latest/",
        "CI": 1,
        "last_update": "",
        "pypi": "",
        "doi_software": "https://zenodo.org/badge/latestdoi/85334761",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Improver",
        "version": "1.16.0",
        "legacy": ""
    },
    "MetSim": {
        "description": "MetSim is a meteorological simulator and forcing disaggregator for hydrologic modeling and climate applications.",
        "url": "https://github.com/UW-Hydro/MetSim",
        "category": "Meteorological tools",
        "docs": "http://metsim.readthedocs.io/",
        "CI": 0,
        "last_update": "2023-11-06T17:18:08",
        "pypi": "https://pypi.org/project/MetSim/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/MetSim",
        "version": "2.4.4",
        "legacy": ""
    },
    "MELODIST": {
        "description": "MELODIST is an open-source toolbox written in Python for disaggregating daily meteorological time series to hourly time steps.",
        "url": "https://github.com/kristianfoerster/melodist",
        "category": "Meteorological tools",
        "docs": "",
        "CI": 1,
        "last_update": "2024-06-07T10:10:16",
        "pypi": "https://pypi.org/project/MELODIST/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.5194/gmd-9-2315-2016",
        "conda": "",
        "version": "0.1.6",
        "legacy": ""
    },
    "PySteps": {
        "description": "pySTEPS is a community-driven initiative for developing and maintaining an easy to use, modular, free and open source Python framework for short-term ensemble prediction systems.",
        "url": "https://github.com/pySTEPS/pysteps",
        "category": "Meteorological tools",
        "docs": "https://pysteps.readthedocs.io/en/stable/",
        "CI": 1,
        "last_update": "2025-07-11T05:56:05",
        "pypi": "https://pypi.org/project/PySteps/",
        "doi_software": "https://zenodo.org/badge/latestdoi/140263418",
        "doi_paper": "https://doi.org/10.5194/gmd-12-4185-2019",
        "conda": "https://anaconda.org/conda-forge/PySteps",
        "version": "1.18.1",
        "legacy": 0
    },
    "Evaporation": {
        "description": "Calculation of evaporation and transpiration.",
        "url": "https://github.com/openmeteo/evaporation",
        "category": "Meteorological tools",
        "docs": "https://evaporation.readthedocs.io",
        "CI": 0,
        "last_update": "2024-04-16T20:38:43",
        "pypi": "https://pypi.org/project/Evaporation/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "2.0.1",
        "legacy": ""
    },
    "pyet": {
        "description": "A python-package for calculating reference and potential evaporation.",
        "url": "https://github.com/phydrus/pyet",
        "category": "Meteorological tools",
        "docs": "https://pyet.readthedocs.io/",
        "CI": 1,
        "last_update": "2025-09-02T21:54:14",
        "pypi": "https://pypi.org/project/pyet/",
        "doi_software": "https://zenodo.org/doi/10.5281/zenodo.5896799",
        "doi_paper": "https://doi.org/10.5194/gmd-17-7083-2024",
        "conda": "https://anaconda.org/conda-forge/pyet",
        "version": "1.4.0",
        "legacy": 0
    },
    "SPEI": {
        "description": "Calculate and visualize some popular drought indices such as the SPI, SPEI and SGI.",
        "url": "https://github.com/martinvonk/SPEI",
        "category": "Meteorological tools",
        "docs": "",
        "CI": 0,
        "last_update": "2025-07-26T09:01:06",
        "pypi": "https://pypi.org/project/SPEI/",
        "doi_software": "https://doi.org/10.5281/zenodo.10816741",
        "doi_paper": "",
        "conda": "",
        "version": "0.8.0",
        "legacy": ""
    },
    "Pytesmo": {
        "description": "python Toolbox for the Evaluation of Soil Moisture Observations.",
        "url": "https://github.com/TUW-GEO/pytesmo",
        "category": "Unsaturated Zone",
        "docs": "https://pytesmo.readthedocs.io",
        "CI": 0,
        "last_update": "2025-03-05T15:59:08",
        "pypi": "https://pypi.org/project/Pytesmo/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.18.0",
        "legacy": ""
    },
    "Phydrus": {
        "description": "Python implementation of the HYDRUS-1D unsaturated zone model",
        "url": "https://github.com/phydrus/phydrus",
        "category": "Unsaturated Zone",
        "docs": "https://phydrus.readthedocs.io/",
        "CI": 0,
        "last_update": "2021-03-30T16:46:37",
        "pypi": "https://pypi.org/project/Phydrus/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.2.0",
        "legacy": ""
    },
    "VS2DPY": {
        "description": "Python implementation of the VS2D unsaturated zone model.",
        "url": "https://github.com/martinvonk/VS2DPY",
        "category": "Unsaturated Zone",
        "docs": "",
        "CI": 0,
        "last_update": "2022-12-07T13:17:27",
        "pypi": "https://pypi.org/project/VS2DPY/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.3.0",
        "legacy": ""
    },
    "pedon": {
        "description": "Python package for (unsaturated) soil properties including pedotransfer functions.",
        "url": "https://github.com/martinvonk/pedon",
        "category": "Unsaturated Zone",
        "docs": "",
        "CI": 0,
        "last_update": "2025-08-12T09:33:43",
        "pypi": "https://pypi.org/project/pedon/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.0.8",
        "legacy": ""
    },
    "FloPy": {
        "description": "The Python interface to MODFLOW.",
        "url": "https://github.com/modflowpy/flopy",
        "category": "Groundwater",
        "docs": "https://flopy.readthedocs.io",
        "CI": 1,
        "last_update": "2025-05-13T01:43:19",
        "pypi": "https://pypi.org/project/FloPy/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1111/gwat.12413",
        "conda": "https://anaconda.org/conda-forge/FloPy",
        "version": "3.9.3",
        "legacy": 0
    },
    "imod-python": {
        "description": "Make massive MODFLOW models.",
        "url": "https://github.com/Deltares/imod-python",
        "category": "Groundwater",
        "docs": "https://deltares.github.io/imod-python/",
        "CI": 1,
        "last_update": "2024-11-20T12:13:07",
        "pypi": "https://pypi.org/project/imod/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.18.1",
        "legacy": ""
    },
    "WellApplication": {
        "description": "Set of tools for groundwater level and water chemistry analysis.",
        "url": "https://github.com/utah-geological-survey/WellApplication",
        "category": "Groundwater",
        "docs": "",
        "CI": 0,
        "last_update": "2018-05-30T18:20:35",
        "pypi": "https://pypi.org/project/WellApplication/",
        "doi_software": "https://zenodo.org/badge/latestdoi/48931715",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/WellApplication",
        "version": "0.5.6",
        "legacy": 0
    },
    "TimML": {
        "description": "A Multi-Layer, Analytic Element Model.",
        "url": "https://github.com/mbakker7/timml",
        "category": "Groundwater",
        "docs": "https://timml.readthedocs.io/",
        "CI": 1,
        "last_update": "2025-05-31T16:59:08",
        "pypi": "https://pypi.org/project/TIMML/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1016/j.advwatres.2005.11.005",
        "conda": "https://anaconda.org/conda-forge/TIMML",
        "version": "6.7.0",
        "legacy": 0
    },
    "TTim": {
        "description": "A Multi-Layer, Transient, Analytic Element Model.",
        "url": "https://github.com/mbakker7/ttim",
        "category": "Groundwater",
        "docs": "https://ttim.readthedocs.io",
        "CI": 1,
        "last_update": "2025-05-06T14:54:38",
        "pypi": "https://pypi.org/project/TTim/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1007/s10040-013-0975-2",
        "conda": "https://anaconda.org/conda-forge/TTim",
        "version": "0.7.2",
        "legacy": 0
    },
    "PyHELP": {
        "description": "A Python library for the assessment of spatially distributed groundwater recharge and hydrological components with HELP.",
        "url": "https://github.com/cgq-qgc/pyhelp",
        "category": "Groundwater",
        "docs": "http://pyhelp.readthedocs.io",
        "CI": 0,
        "last_update": "2022-06-20T14:07:01",
        "pypi": "https://pypi.org/project/PyHELP/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.4.0",
        "legacy": 0
    },
    "Anaflow": {
        "description": "A python-package containing analytical solutions for the groundwater flow equation",
        "url": "https://github.com/GeoStat-Framework/AnaFlow",
        "category": "Groundwater",
        "docs": "https://anaflow.readthedocs.io",
        "CI": 1,
        "last_update": "2023-04-16T11:47:20",
        "pypi": "https://pypi.org/project/Anaflow/",
        "doi_software": "https://doi.org/10.5281/zenodo.1135723",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Anaflow",
        "version": "1.1.0",
        "legacy": 0
    },
    "WellTestPy": {
        "description": "A python-package for handling well based field campaigns.",
        "url": "https://github.com/GeoStat-Framework/welltestpy",
        "category": "Groundwater",
        "docs": "https://welltestpy.readthedocs.io",
        "CI": 1,
        "last_update": "2023-04-18T10:45:12",
        "pypi": "https://pypi.org/project/WellTestPy/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1111/gwat.13121",
        "conda": "https://anaconda.org/conda-forge/WellTestPy",
        "version": "1.2.0",
        "legacy": 0
    },
    "NLmod": {
        "description": "Python code to process, build and visualize MODFLOW models in the Netherlands. Model data is stored in a xarray Datasets and geopandas GeoDataFrames.",
        "url": "https://github.com/ArtesiaWater/nlmod",
        "category": "Groundwater",
        "docs": "https://nlmod.readthedocs.io",
        "CI": 1,
        "last_update": "2025-07-21T07:40:32",
        "pypi": "https://pypi.org/project/nlmod/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.10.0",
        "legacy": 0
    },
    "Hydropy": {
        "description": "Analysis of hydrological oriented time series.",
        "url": "https://github.com/stijnvanhoey/hydropy",
        "category": "Time Series (Analysis)",
        "docs": "",
        "CI": 0,
        "last_update": "2017-02-03T03:59:01",
        "pypi": "https://pypi.org/project/Hydropy/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.1.2",
        "legacy": 1
    },
    "Pastas": {
        "description": "Analysis of hydrological time series using time series models.",
        "url": "https://github.com/pastas/pastas",
        "category": "Groundwater",
        "docs": "https://pastas.readthedocs.io",
        "CI": 1,
        "last_update": "2025-09-11T13:22:41",
        "pypi": "https://pypi.org/project/Pastas/",
        "doi_software": "https://doi.org/10.5281/zenodo.1465866",
        "doi_paper": "http://doi.org/10.5281/zenodo.1465866",
        "conda": "https://anaconda.org/conda-forge/Pastas",
        "version": "1.11.0",
        "legacy": ""
    },
    "Hydrostats": {
        "description": "Tools for use in comparison studies, specifically for use in the field of hydrology.",
        "url": "https://github.com/BYU-Hydroinformatics/Hydrostats",
        "category": "Evaluation",
        "docs": "https://hydrostats.readthedocs.io/en/stable/",
        "CI": 0,
        "last_update": "2019-04-24T20:56:21",
        "pypi": "https://pypi.org/project/Hydrostats/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.3390/hydrology5040066",
        "conda": "https://anaconda.org/conda-forge/Hydrostats",
        "version": "0.78",
        "legacy": ""
    },
    "htimeseries": {
        "description": "This module provides the HTimeseries class, which is a layer on top of pandas, offering a little more functionality.",
        "url": "https://github.com/openmeteo/htimeseries",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2024-11-23T20:17:49",
        "pypi": "https://pypi.org/project/htimeseries/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "8.0.0",
        "legacy": ""
    },
    "HydroAnalysis": {
        "description": "Python package to calculate indices and metrics useful in the everyday job of a hydrologist.",
        "url": "https://github.com/dalmo1991/HydroAnalysis",
        "category": "Miscellaneous",
        "docs": "https://hydroanalysis.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2025-03-18T18:45:47",
        "pypi": "https://pypi.org/project/HydroAnalysis/",
        "doi_software": "https://zenodo.org/badge/latestdoi/406317261",
        "doi_paper": "",
        "conda": "",
        "version": "1.0.1",
        "legacy": 1
    },
    "HydroPandas": {
        "description": "Module for loading time series data into custom DataFrames",
        "url": "https://github.com/ArtesiaWater/hydropandas",
        "category": "Data Collection",
        "docs": "https://hydropandas.readthedocs.io",
        "CI": 0,
        "last_update": "2025-09-03T10:29:42",
        "pypi": "https://pypi.org/project/HydroPandas/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.15.1",
        "legacy": ""
    },
    "GeoArchPy": {
        "description": "Stochastic geological modeling",
        "url": "https://github.com/randlab/ArchPy",
        "category": "Groundwater",
        "docs": "https://archpy.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2025-09-26T08:42:57",
        "pypi": "https://pypi.org/project/Geoarchpy/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.3389/fams.2024.1441596",
        "conda": "",
        "version": "1.2.8",
        "legacy": ""
    },
    "PyKasso": {
        "description": "Simulate stochastic karst conduit networks",
        "url": "https://github.com/randlab/pyKasso",
        "category": "Groundwater",
        "docs": "https://archpy.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2023-04-17T21:26:45",
        "pypi": "https://pypi.org/project/pykasso/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1007/s10040-022-02464-x",
        "conda": "",
        "version": "0.1.3",
        "legacy": ""
    },
    "traval": {
        "description": "Tools for applying automatic error detection schemes to timeseries",
        "url": "https://github.com/ArtesiaWater/traval",
        "category": "Evaluation",
        "docs": "https://traval.readthedocs.io/",
        "CI": 0,
        "last_update": "2025-04-11T10:11:03",
        "pypi": "https://pypi.org/project/traval/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.5.2",
        "legacy": ""
    },
    "PcRaster": {
        "description": "Is a collection of software targeted at the development and deployment of spatio-temporal environmental models.",
        "url": "http://pcraster.geo.uu.nl/",
        "category": "Geospatial",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/PcRaster",
        "version": "4.4.2",
        "legacy": ""
    },
    "PyGeoprocessing": {
        "description": "A Python/Cython based library that provides a set of commonly used raster, vector, and hydrological operations for GIS processing.",
        "url": "https://pypi.org/project/pygeoprocessing/",
        "category": "Geospatial",
        "docs": "https://pygeoprocessing.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2025-07-10T19:35:44",
        "pypi": "https://pypi.org/project/PyGeoprocessing/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/PyGeoprocessing",
        "version": "2.4.9",
        "legacy": ""
    },
    "Pysheds": {
        "description": "Simple and fast watershed delineation in python.",
        "url": "https://github.com/mdbartos/pysheds",
        "category": "Geospatial",
        "docs": "",
        "CI": 0,
        "last_update": "2025-08-14T23:16:27",
        "pypi": "https://pypi.org/project/Pysheds/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Pysheds",
        "version": "0.5",
        "legacy": ""
    },
    "Lidar": {
        "description": "Terrain and hydrological analysis based on LiDAR-derived digital elevation models (DEM).",
        "url": "https://github.com/giswqs/lidar",
        "category": "Geospatial",
        "docs": "https://richdem.readthedocs.io/",
        "CI": 0,
        "last_update": "2025-01-30T05:17:23",
        "pypi": "https://pypi.org/project/Lidar/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Lidar",
        "version": "0.8.4",
        "legacy": ""
    },
    "SPOTpy": {
        "description": "A Statistical Parameter Optimization Tool for Python.",
        "url": "https://github.com/thouska/spotpy",
        "category": "Optimization and Uncertainty",
        "docs": "https://spotpy.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2025-02-18T09:55:45",
        "pypi": "https://pypi.org/project/SPOTpy/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/SPOTpy",
        "version": "1.6.6",
        "legacy": ""
    },
    "PyGLUE": {
        "description": "Generalised Likelihood Uncertainty Estimation (GLUE) Framework.",
        "url": "https://github.com/julienmalard/pyGLUE/",
        "category": "Optimization and Uncertainty",
        "docs": "",
        "CI": 0,
        "last_update": "2012-01-06T13:09:48",
        "pypi": "https://pypi.org/project/PyGLUE/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.0.4",
        "legacy": 1
    },
    "Pyemu": {
        "description": "Python modules for model-independent uncertainty analyses, data-worth analyses, and interfacing with PEST(++).",
        "url": "https://github.com/jtwhite79/pyemu",
        "category": "Optimization and Uncertainty",
        "docs": "https://pyemu.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2024-12-11T22:59:50",
        "pypi": "https://pypi.org/project/Pyemu/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Pyemu",
        "version": "1.3.8",
        "legacy": ""
    },
    "HPGL": {
        "description": "High Performance Geostatistics Library.",
        "url": "http://hpgl.github.io/hpgl/",
        "category": "Geospatial",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": ""
    },
    "HydroErr": {
        "description": "Goodness of Fit metrics for use in comparison studies, specifically in the field of hydrology.",
        "url": "https://github.com/BYU-Hydroinformatics/HydroErr",
        "category": "Evaluation",
        "docs": "https://hydroerr.readthedocs.io/en/stable/",
        "CI": 0,
        "last_update": "2019-04-23T15:02:49",
        "pypi": "https://pypi.org/project/HydroErr/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/HydroErr",
        "version": "1.24",
        "legacy": ""
    },
    "Climate-indices": {
        "description": "Climate indices for drought monitoring, community reference implementations in Python.",
        "url": "https://github.com/monocongo/climate_indices",
        "category": "Statistics",
        "docs": "https://climate-indices.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2025-08-03T21:41:54",
        "pypi": "https://pypi.org/project/Climate-indices/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "2.2.0",
        "legacy": ""
    },
    "HydroLM": {
        "description": "The HydroLM package contains a class and functions for automating linear regressions OLS for hydrologists.",
        "url": "https://github.com/mullenkamp/HydroLM",
        "category": "Statistics",
        "docs": "",
        "CI": 0,
        "last_update": "2019-01-15T02:28:42",
        "pypi": "https://pypi.org/project/HydroLM/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.0.7",
        "legacy": ""
    },
    "PySDI": {
        "description": "Pysdi is a set of open source scripts that compute non-parametric standardized drought indices (SDI) using raster data sets as input data.",
        "url": "https://bitbucket.org/pysdi/pysdi/src/master/",
        "category": "Statistics",
        "docs": "",
        "CI": 0,
        "last_update": "2020-02-25T19:50:28",
        "pypi": "https://pypi.org/project/PySDI/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.2.6.3.1",
        "legacy": ""
    },
    "xskillscore": {
        "description": "Metrics for verifying forecasts.",
        "url": "https://github.com/xarray-contrib/xskillscore",
        "category": "Evaluation",
        "docs": "https://xskillscore.readthedocs.io/en/stable/",
        "CI": 0,
        "last_update": "2025-07-14T17:40:59",
        "pypi": "https://pypi.org/project/xskillscore/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/xskillscore",
        "version": "0.0.27",
        "legacy": ""
    },
    "HKVFEWSPY": {
        "description": "Connection to the Delft FEWS servers.",
        "url": "https://github.com/HKV-products-services/hkvfewspy",
        "category": "Data Collection",
        "docs": "",
        "CI": 0,
        "last_update": "2023-02-21T10:39:05",
        "pypi": "https://pypi.org/project/HKVFEWSPY/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.0.2",
        "legacy": ""
    },
    "Openradar": {
        "description": "Library for processing a set of dutch, german and belgian precipitation radars into calibrated composites.",
        "url": "https://github.com/nens/openradar",
        "category": "Data Collection",
        "docs": "",
        "CI": 0,
        "last_update": "2019-10-31T07:07:48",
        "pypi": "https://pypi.org/project/Openradar/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.0.1",
        "legacy": ""
    },
    "Ecohydrolib": {
        "description": "Libraries and command-line scripts for performing ecohydrology data preparation workflows.",
        "url": "https://github.com/selimnairb/EcohydroLib",
        "category": "Data Collection",
        "docs": "",
        "CI": 0,
        "last_update": "2015-07-02T21:34:30",
        "pypi": "https://pypi.org/project/Ecohydrolib/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.29",
        "legacy": ""
    },
    "Ulmo": {
        "description": "Clean, simple and fast access to public hydrology and climatology data.",
        "url": "https://github.com/ulmo-dev/ulmo/",
        "category": "Data Collection",
        "docs": "https://ulmo.readthedocs.io/en/latest/?badge=latest",
        "CI": 0,
        "last_update": "2021-09-02T21:50:05",
        "pypi": "https://pypi.org/project/Ulmo/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Ulmo",
        "version": "0.8.8",
        "legacy": ""
    },
    "PyHIS": {
        "description": "PyHIS is a python library for querying CUAHSI*-HIS** web services.",
        "url": "https://pypi.org/project/pyhis/",
        "category": "Data Collection",
        "docs": "",
        "CI": 0,
        "last_update": "2011-11-15T20:54:22",
        "pypi": "https://pypi.org/project/PyHIS/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.1.1-alpha",
        "legacy": ""
    },
    "Wetterdienst": {
        "description": "Python Toolset For Accessing Weather Data From German Weather Service.",
        "url": "https://github.com/earthobservations/wetterdienst",
        "category": "Data Collection",
        "docs": "https://wetterdienst.readthedocs.io/",
        "CI": 0,
        "last_update": "2025-09-21T17:21:31",
        "pypi": "https://pypi.org/project/Wetterdienst/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Wetterdienst",
        "version": "0.113.0",
        "legacy": ""
    },
    "Dataretrieval": {
        "description": "Dataretrieval is a Python package for obtaining USGS or EPA water quality data, streamflow data, and metadata directly from web services.",
        "url": "https://github.com/USGS-python/dataretrieval",
        "category": "Data Collection",
        "docs": "",
        "CI": 0,
        "last_update": "2025-05-06T22:40:37",
        "pypi": "https://pypi.org/project/Dataretrieval/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Dataretrieval",
        "version": "1.0.12",
        "legacy": ""
    },
    "ESMPY": {
        "description": "Earth System Modeling Framework (ESMF) Python interface.",
        "url": "https://github.com/esmf-org/esmf",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/ESMPY",
        "version": "8.9.0",
        "legacy": ""
    },
    "PyHSPF": {
        "description": "Python extensions to the Hydrological Simulation Program in Fortran (HSPF).",
        "url": "https://github.com/djlampert/PyHSPF",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2017-08-10T15:39:18",
        "pypi": "https://pypi.org/project/PyHSPF/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.2.4",
        "legacy": ""
    },
    "PYWR": {
        "description": "Spatial allocation tool.",
        "url": "https://github.com/pywr/pywr",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2025-09-19T11:13:18",
        "pypi": "https://pypi.org/project/PYWR/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/PYWR",
        "version": "1.29.0",
        "legacy": ""
    },
    "SPHY": {
        "description": "Spatial Processes in HYdrology (SPHY) model.",
        "url": "https://github.com/WilcoTerink/SPHY",
        "category": "Miscellaneous",
        "docs": "https://sphy.readthedocs.io/en/latest/",
        "CI": 0,
        "last_update": "2019-05-26T09:07:24",
        "pypi": "https://pypi.org/project/SPHY/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "2.2.1",
        "legacy": ""
    },
    "xsboringen": {
        "description": "A python library for processing and plotting borehole and CPT data, developed for open data formats in the Netherlands.",
        "url": "https://github.com/tomvansteijn/xsboringen",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": 1
    },
    "PyMT": {
        "description": "PyMT is an Open Source Python package that provides the necessary tools used for the coupling of models that expose the Basic Model Interface (BMI).",
        "url": "https://github.com/csdms/pymt/",
        "category": "Miscellaneous",
        "docs": "https://pymt.readthedocs.io/en/latest/?badge=latest",
        "CI": 0,
        "last_update": "2010-09-06T23:04:31",
        "pypi": "https://pypi.org/project/PyMT/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/PyMT",
        "version": "0.5.1",
        "legacy": ""
    },
    "Landlab": {
        "description": "The Landlab project creates an environment in which scientists can build a numerical landscape model without having to code all of the individual components.",
        "url": "https://github.com/landlab/landlab",
        "category": "Miscellaneous",
        "docs": "https://landlab.readthedocs.io/",
        "CI": 0,
        "last_update": "2025-08-10T14:58:49",
        "pypi": "https://pypi.org/project/Landlab/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Landlab",
        "version": "2.10.1",
        "legacy": ""
    },
    "EFlowCalc": {
        "description": "Calculator of Streamflow Characteristics.",
        "url": "https://github.com/ThibHlln/eflowcalc",
        "category": "Statistics",
        "docs": "",
        "CI": 0,
        "last_update": "2021-04-26T17:05:09",
        "pypi": "https://pypi.org/project/EFlowCalc/",
        "doi_software": "https://zenodo.org/badge/latestdoi/153001813",
        "doi_paper": "",
        "conda": "",
        "version": "0.1.0",
        "legacy": ""
    },
    "IRIS": {
        "description": "A powerful, format-agnostic, and community-driven Python library for analysing and visualising Earth science data.",
        "url": "https://github.com/SciTools/iris",
        "category": "Miscellaneous",
        "docs": "https://scitools-iris.readthedocs.io/en/stable/",
        "CI": 0,
        "last_update": "2020-02-07T15:51:26",
        "pypi": "https://pypi.org/project/IRIS/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/IRIS",
        "version": "1.0.7",
        "legacy": ""
    },
    "Hydrointerp": {
        "description": "A Python package for interpolating hydrologic data.",
        "url": "https://github.com/mullenkamp/hydrointerp",
        "category": "Miscellaneous",
        "docs": "https://hydrointerp.readthedocs.io",
        "CI": 0,
        "last_update": "2022-05-11T22:16:53",
        "pypi": "https://pypi.org/project/Hydrointerp/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.2.13",
        "legacy": ""
    },
    "Hydrofunctions": {
        "description": "A suite of convenience functions for working with hydrology data in an interactive Python session.",
        "url": "https://github.com/mroberge/hydrofunctions",
        "category": "Miscellaneous",
        "docs": "https://hydrofunctions.readthedocs.io/en/latest/?badge=latest",
        "CI": 0,
        "last_update": "2023-06-14T22:09:49",
        "pypi": "https://pypi.org/project/Hydrofunctions/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Hydrofunctions",
        "version": "0.2.4",
        "legacy": ""
    },
    "Shyft": {
        "description": "Shyft is the open-source toolbox for the energy-market domain, funded and supported by Statkraft.",
        "url": "https://gitlab.com/shyft-os",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2025-02-26T16:33:00",
        "pypi": "https://pypi.org/project/Shyft/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "26.0.0.post1",
        "legacy": ""
    },
    "Hydrobox": {
        "description": "Hydrological preprocessing and analysis toolbox build upon pandas and numpy.",
        "url": "https://github.com/VForWaTer/hydrobox",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2021-05-20T07:00:13",
        "pypi": "https://pypi.org/project/Hydrobox/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.2.0",
        "legacy": ""
    },
    "Wetland": {
        "description": "Wetland is a toolset for mapping surface water and wetland hydrological dynamics using fine-resolution aerial imagery within Google Earth Engine (GEE).",
        "url": "https://github.com/giswqs/wetland",
        "category": "Miscellaneous",
        "docs": "https://wetland.readthedocs.io/",
        "CI": 0,
        "last_update": "2018-10-19T00:23:23",
        "pypi": "https://pypi.org/project/Wetland/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "0.1.0",
        "legacy": ""
    },
    "iRONS": {
        "description": "iRONS (interactive Reservoir Operation Notebooks and Software) is a python package that enables the simulation, forecasting and optimisation of reservoir systems.",
        "url": "https://github.com/iRONStoolbox/iRONStoolbox",
        "category": "Miscellaneous",
        "docs": "https://ironstoolbox.github.io/",
        "CI": 0,
        "last_update": "2022-11-12T16:04:40",
        "pypi": "https://pypi.org/project/iRONS/",
        "doi_software": "",
        "doi_paper": "https://doi.org/10.1016/j.envsoft.2021.105188",
        "conda": "",
        "version": "1.0",
        "legacy": ""
    },
    "Mesas": {
        "description": "Multiresolution Estimation of StorAge Selection functions.",
        "url": "https://github.com/charman2/mesas",
        "category": "Miscellaneous",
        "docs": "https://mesas.readthedocs.io/",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/Mesas",
        "version": "1.20240418",
        "legacy": ""
    },
    "pydsstools": {
        "description": "Python library for simple [HEC-DSS](https://www.hec.usace.army.mil/software/hec-dss/) functions.",
        "url": "https://github.com/gyanz/pydsstools",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2025-08-13T22:35:35",
        "pypi": "https://pypi.org/project/pydsstools/",
        "doi_software": "https://zenodo.org/doi/10.5281/zenodo.7144730",
        "doi_paper": "",
        "conda": "",
        "version": "2.4.0",
        "legacy": ""
    },
    "eWaterCycle": {
        "description": "Platform to do computational hydrology using many of the above mentioned models.",
        "url": "https://github.com/eWaterCycle/ewatercycle",
        "category": "Miscellaneous",
        "docs": "https://ewatercycle.readthedocs.io",
        "CI": 1,
        "last_update": "2024-12-04T12:18:30",
        "pypi": "https://pypi.org/project/eWaterCycle/",
        "doi_software": "https://zenodo.org/doi/10.5281/zenodo.5119389",
        "doi_paper": "https://doi.org/10.5194/gmd-15-5371-2022",
        "conda": "",
        "version": "2.4.0",
        "legacy": 0
    },
    "pyopenrivercam": {
        "description": "Surface velocity, object tracking, and river flow measurements",
        "url": "https://github.com/localdevices/pyorc",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "2025-09-22T20:34:45",
        "pypi": "https://pypi.org/project/pyopenrivercam/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/pyopenrivercam",
        "version": "0.8.10",
        "legacy": ""
    },
    "river-route": {
        "description": "Hydrologic river routing of gridded runoff depths or catchment volumes on vector stream networks",
        "url": "https://github.com/rileyhales/river-route",
        "category": "Miscellaneous",
        "docs": "https://river-route.hales.app/en/latest/",
        "CI": 0,
        "last_update": "2025-08-06T22:52:47",
        "pypi": "https://pypi.org/project/river-route/",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "1.3.0",
        "legacy": ""
    },
    "pywatershed": {
        "description": "A hydrologic model in Python",
        "url": "https://github.com/EC-USGS/pywatershed",
        "category": "Miscellaneous",
        "docs": "pywatershed.readthedocs.io",
        "CI": 1,
        "last_update": "2018-03-24T22:31:13",
        "pypi": "https://pypi.python.org/pypi/pywatershed",
        "doi_software": "",
        "doi_paper": "",
        "conda": "https://anaconda.org/conda-forge/pywatershed",
        "version": "2.1",
        "legacy": ""
    },
    "pySWAP": {
        "description": "Python wraper for SWAP hydrological model",
        "url": "https://github.com/zawadzkim/pySWAP",
        "category": "Unsaturated Zone",
        "docs": "zawadzkim.github.io/pySWAP/",
        "CI": 1,
        "last_update": "2025-02-17T21:03:00",
        "pypi": "https://pypi.org/project/pyswap/",
        "doi_software": "https://doi.org/10.5281/zenodo.14884487",
        "doi_paper": "",
        "conda": "",
        "version": "0.2.7",
        "legacy": ""
    },
    "": {
        "description": "",
        "url": "",
        "category": "Miscellaneous",
        "docs": "",
        "CI": 0,
        "last_update": "",
        "pypi": "",
        "doi_software": "",
        "doi_paper": "",
        "conda": "",
        "version": "",
        "legacy": ""
    }
}